version: 2

key: &src-cache-key src-{{ .Branch }}-{{ .Revision }}
key: &npm-dependencies-cache-key npm-dependencies-{{ checksum "package.json" }}
key: &npm-prod-cache-key prod-{{ .Branch }}-{{ .Revision }}

steps: &upload-and-publish
  - run:
      name: "Install Dependencies"
      command: |
        npm config set progress=false
        sudo npm install -g firebase-tools
  - restore_cache:
      key: *npm-prod-cache-key
  - run:
      name: "Publish to Firestore"
      command: |
        firebase deploy --token=$FIREBASE_TOKEN --non-interactive

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:9.2.1
    working_directory: /home/circleci/project
    steps:
      - checkout
      - save_cache:
          paths:
            - ./
          key: *src-cache-key
      - run:
          name: Install npm dependencies
          command: |
            npm install
      # - store_artifacts:
      #     path: /home/circleci/.npm/_logs
      #     destination: ./npm-logs/
      - save_cache:
          paths:
            - node_modules
          key: npm-dependencies-{{ checksum "package.json" }}
  build_prod:
    docker:
      - image: circleci/node:9.2.1
    working_directory: /home/circleci/project
    steps:
      - restore_cache:
          key: *src-cache-key
      - restore_cache:
          key: *npm-dependencies-cache-key
      - run:
          name: Build package
          command: |
            npm config set progress=false
            sudo npm install -g @angular/cli
            ng build
      - store_artifacts:
          path: dist
          destination: ./output/dist
      - run:
          name: Copy Firebase config
          command: |
            cp firebase.json output/
            cp database.rules.json output/
      - save_cache:
          paths:
            - output
          key: *npm-prod-cache-key
  upload_and_publish_prod:
    docker:
      - image: circleci/node:9.2.1
    working_directory: /home/circleci/project
    steps:
      *upload-and-publish

workflows:
  version: 2
  build:
    jobs:
      - install_dependencies
      - build_prod:
          requires:
            - install_dependencies
      - upload_and_publish_prod:
          requires:
            - build_prod
          filters:
            branches:
              only:
                - develop