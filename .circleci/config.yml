version: 2

working_directory: &working_directory /home/circleci/project
key: &src-cache-key src-{{ .Branch }}-{{ .Revision }}
key: &art-app-key art-app-{{ .Branch }}-{{ .Revision }}
key: &art-api-key art-api-{{ .Branch }}-{{ .Revision }}

restore_cache: &restore_src
  key: *src-cache-key

docker: &docker_node
  - image: circleci/node:9.2.1

docker: &docker_api
  - image: microsoft/dotnet:2.0.5-sdk-2.1.4

run: &npm_install
  name: Install npm dependencies
  command: |
    echo Project path: ${project_path}
    cd ${project_path}
    npm config set progress=false
    npm install

run: &npm_build
  name: Run prod build
  command: |
    echo Project path: ${project_path}
    cd ${project_path}
    node node_modules/@angular/cli/bin/ng build --prod

jobs:
  checkout_source:
    docker: *docker_node
    working_directory: ~/project
    steps:
      - checkout
      - save_cache:
          key: *src-cache-key
          paths:
            - ~/project
  build_api:
    docker: *docker_api
    working_directory: *working_directory
    steps:
      - restore_cache: *restore_src
      - run:
          name: Build api project
          command: dotnet publish src/Itinerary.Api/Itinerary.Api.csproj -o ../../build/api -c Release
      - save_cache:
          key: *art-api-key
          paths:
            - build/api
  build_app:
    environment:
      project_path: src/Itinerary.Web
    docker: *docker_node
    working_directory: *working_directory
    steps:
      - restore_cache: *restore_src
      - restore_cache:
          key: deps-app-npm-{{ .Branch }}-{{ checksum "src/Itinerary.Web/package.json" }}
      - run: *npm_install
      - save_cache:
          key: deps-app-npm-{{ .Branch }}-{{ checksum "src/Itinerary.Web/package.json" }}
          paths:
            - src/Itinerary.Web/node_modules
      - run: *npm_build
      - save_cache:
          key: *art-app-key
          paths:
            - build/web
  emit_artifacts:
    working_directory: *working_directory
    steps:
      - restore_cache:
          key: *art-api-key
      - restore_cache:
          key: *art-app-key
      - run:
          name: Create archives
          command: |
            ssh -v $DROPLET_USER@$DROPLET_IP
            #sudo apt-get update
            #sudo apt install -y rsync
            #scp -r $DROPLET_USER@$DROPLET_IP:/var/www/itinerary1 build/

workflows:
  version: 2
  build:
    jobs:
      - checkout_source
      - build_app:
          requires:
            - checkout_source
      - build_api:
          requires:
            - checkout_source
      - emit_artifacts:
          filters:
            branches:
              only:
                - feature/migrate-to-angular-cli
          requires:
            - build_app
            - build_api
